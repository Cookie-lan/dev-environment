version: '3.5'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}

services:
  redis:
    container_name: redis
    build:
      context: ./redis
    environment:
      - TZ=${TZ}
    privileged: true
    volumes:
      - ${REDIS_DATA_PATH_HOST}:/data
      - ${REDIS_CONF}:/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - backend
    restart: always
    command: /bin/bash -c "redis-server /etc/redis/redis.conf --appendonly yes"

  mysql:
    container_name: mysql
    build:
      context: ./mysql
    environment:
      - TZ=${TZ}
      - MYSQL_USER=${MYSQL_USERNAME}                  # 设置 Mysql 用户名称
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}              # 设置 Mysql 用户密码
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}    # 设置 Mysql root 用户密码
    privileged: true
    volumes:
      - ${MYSQL_DATA_PATH_HOST}:/var/lib/mysql        # 引用 .env 配置中 DATA_PATH_HOST 变量，将宿主机上存放 Mysql 数据的目录挂载到容器中 /var/lib/mysql 目录
      - ${MYSQL_CONF}:/etc/my.cnf   # 引用 .env 配置中 CONF_PATH_HOST 变量，将宿主机上存放 Mysql 配置文件的目录挂载到容器中 /etc/mysql/conf.d 目录
    ports:
      - "3306:3306"                          # 设置容器3306端口映射指定宿主机端口
    networks:
      - backend
    restart: always

  etcd: # 自定义容器名称
    container_name: etcd
    build:
      context: ./etcd                    # 指定构建使用的 Dockerfile 文件
    environment:
      - TZ=${TZ}
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports: # 设置端口映射
      - "${ETCD_PORT}:2379"
    networks:
      - backend
    restart: always